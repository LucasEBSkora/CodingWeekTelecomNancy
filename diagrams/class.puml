@startuml "class"

skinparam linetype polyline
package model {
  class User {
    + int UID
    + String name
    + String password
    + String adress
    + String email
    + int florains
    + boolean sleepMode
  }

  User o-- Ad

  Enum AdType {
    SERVICE
    GOOD
  }

  class Ad {
    + int ID
    + String name
    + boolean isOffer
    + String description
    + String imagePath
    + int cost
    + String adress
    + double maxDistance
    + Date start
    + Date end
    + Duration duration
  }
  Ad o--> AdType

  interface Database {
    + boolean isUsernameAvailable(String name)
    + int addUser(User user)
    + int addAd(Ad ad)
    + User getUser(int UID)
    + Ad getAd(int ID)
    + int authenticate(String username, String password)
    + ObservableList<Ad> getAdsAsList()
    + boolean isUsernameAvailable(String name)
    + String saveImage(String path)
  }
  class JSONDatabase {
    - {static} JSONDatabase instance
    + {static} Database getInstance()
    - int getNewUserID()
    - int getNewAdID()
    - Path getPathToDbFile()
    - void save()
    - JSONDatabaseMemento toMemento()
    + String asJSON()
    - void load()
    - void loadFromJSON(String dbString)
    - void loadFromMemento(JSONDatabaseMemento m)
    - Path getPathToFile(String name)
    + String asJSON()
  }


  JSONDatabase --> IntSupplier
  JSONDatabase ..|> Database
  JSONDatabase --> User
  JSONDatabase --> Ad
  interface IntSupplier {
    + int getAsInt()
  }

  JSONDatabaseMemento --> User
  JSONDatabaseMemento --> Ad

  RandomIDSupplier ..|> IntSupplier


}

@enduml